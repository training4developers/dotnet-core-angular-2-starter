{"version":3,"sources":["webpack:///./wwwrootsrc/js/main.ts","webpack:///./wwwrootsrc/js/app/app.module.ts","webpack:///./wwwrootsrc/js/app/app.component.ts","webpack:///./wwwrootsrc/js/app/app.component.scss","webpack:///./wwwrootsrc/js/app/app.component.html","webpack:///./wwwrootsrc/css/styles.scss?be69","webpack:///./wwwrootsrc/css/styles.scss"],"names":[],"mappings":";;;;;;AAAA,kEAAiE;AACjE,yDAA2E;AAE3E,kFAAiF;AACjF,qCAA+C;AAE/C,kDAAiD;AACjD,sDAAqD;AACrD,GAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,YAAY,CAAC,CAAC,CAAC;KAC/D,qBAAc,EAAE,CAAC;AAClB,EAAC;AAED,wBAAuB;AACvB,4CAA6C;AAE7C,gDAA+C;AAC/C,kDAAsB,EAAE,CAAC,eAAe,CAAC,sBAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;AChBpD,iEAAgE;AAChE,uDAAsD;AACtD,qCAAyC;AAEzC,kEAAiE;AACjE,oEAAmE;AACnE,oEAAmE;AACnE,kEAAiE;AACjE,uEAAsE;AACtE,iDAAgD;AAChD,kDAA0D;AAE1D,sEAAqE;AACrE,+CAA+C;AAE/C,iDAAgD;AAChD,0EAAyE;AACzE,iEAAgE;AAChE,qEAAoE;AACpE,6CAA4C;AAC5C,yBAA+B;AAE/B,iDAAgD;AAChD,wDAAuD;AACvD,gDAA+C;AAM/C;KAAA;KAAyB,CAAC;KAAD,gBAAC;AAAD,EAAC;AAA1B;KALC,eAAQ,CAAC;SACT,OAAO,EAAE,CAAE,gCAAa,CAAE;SAC1B,YAAY,EAAE,CAAE,4BAAY,CAAE;SAC9B,SAAS,EAAE,CAAE,4BAAY,CAAE;MAC3B,CAAC;;cACwB;AAAb,8BAAS;;;;;;;;;;;;;;;;;;AC9BtB,iDAAgD;AAChD,oBAAmB;AACnB,qCAA0C;AAE1C,iDAAgD;AAChD,wDAAuD;AAUvD;KATA;SAWC,4DAA4D;SAC5D,8CAA8C;SAC9C,YAAO,GAAW,cAAc,CAAC;KAElC,CAAC;KAAD,mBAAC;AAAD,EAAC;AAND;KATC,gBAAS,CAAC;SACV,mEAAmE;SACnE,oCAAoC;SACpC,QAAQ,EAAE,MAAM;SAChB,wCAAwC;SACxC,MAAM,EAAE,CAAC,mBAAO,CAAC,EAAsB,CAAC,CAAC;SACzC,iCAAiC;SACjC,QAAQ,EAAE,mBAAO,CAAC,EAAsB,CAAC;MACzC,CAAC;;iBAOD;AANY,oCAAY;;;;;;;;ACfzB,yBAAwB,gBAAgB,EAAE,G;;;;;;;ACA1C,6HAA4H,SAAS,O;;;;;;;ACArI;;AAEA;AACA;AACA;AACA;AACA,iDAAmF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,iCAAgC,UAAU,EAAE;AAC5C,E;;;;;;;ACpBA;AACA;;;AAGA;AACA,iCAAgC,iBAAiB,EAAE;;AAEnD","file":"app.js","sourcesContent":["// Used to bootstrap the application in a web browser environment\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\n// The function enableProdMode switches the application to prod mode when invoked\nimport { enableProdMode } from '@angular/core';\n\n// in proc mode special development and debugging\n// capabilities are turned off to improve performance\nif (String(process.env['ENV']).toLowerCase() === 'production') {\n enableProdMode();\n}\n\n// import the AppModule\nimport { AppModule } from './app/app.module';\n\n// bootstrap the application from the AppModule\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./wwwrootsrc/js/main.ts","// The NgModule decorator is use to decorate classes to identify\n// them as module classes in the Angular 2 application\nimport { NgModule } from '@angular/core';\n\n// Imports the Browser Module to run the Angular 2 application in\n// a web browser environment. At the moment, Angular 2 applications\n// typically run in a web browser environment, but this is expected\n// to expand to native apps, such as iOS apps, in the near future\n// meaning Angular 2 will not be limited to a web browser environment,\n// and other platform modules will be available.\nimport { BrowserModule } from '@angular/platform-browser';\n\n// Import the AppComponent so it can be registered with the AppModule\nimport { AppComponent } from './app.component';\n\n// Imports the global styles for the application\n// Angular 2 apps have two kinds of styles, global and component-specific\n// styles. Global styles are referenced in the App Module, while\n// component specific styles are referenced via the styles option on\n// each component's decorator configuration\t\nimport '../../css/styles.scss';\n\n// Decorates the class to be an Angular 2 module\n// Each Angular 2 application has a top-level AppModule\n// from which the application bootstraps itself\n@NgModule({\n\timports: [ BrowserModule ],\n\tdeclarations: [ AppComponent ],\n\tbootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n\n\n// WEBPACK FOOTER //\n// ./wwwrootsrc/js/app/app.module.ts","// imports the Component decorator from the core\n// Angular 2 module\nimport { Component } from '@angular/core';\n\n// The Component Decorator configures this class\n// to serve as a component in the Angular 2 application\n@Component({\n\t// Used to identify the element the component will be applied to in\n\t// the DOM structure of the web page\n\tselector: 'main',\n\t// Loads the component's specific styles\n\tstyles: [require('./app.component.scss')],\n\t// Loads the component's template\n\ttemplate: require('./app.component.html')\n})\nexport class AppComponent {\n\n\t// sets a property on the component which will be referenced\n\t// as a template variable in the template file\n\tmessage: string = 'Hello World!';\n\n}\n\n\n// WEBPACK FOOTER //\n// ./wwwrootsrc/js/app/app.component.ts","module.exports = \"main {\\n  color: blue; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./wwwrootsrc/js/app/app.component.scss\n// module id = 26\n// module chunks = 0","module.exports = \"<!-- populates the message template variable from the message property defined on AppComponent -->\\n<h1>{{message}}</h1>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./wwwrootsrc/js/app/app.component.html\n// module id = 27\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./styles.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./styles.scss\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/sass-loader/index.js!./styles.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./wwwrootsrc/css/styles.scss\n// module id = 28\n// module chunks = 0","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"body {\\n  margin: 10px; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/sass-loader!./wwwrootsrc/css/styles.scss\n// module id = 29\n// module chunks = 0"],"sourceRoot":""}